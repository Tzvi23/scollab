@model StudentCollab.Models.User
@using StudentCollab.Models
@using StudentCollab.Dal

@{
    ViewBag.Title = "ContentPage";
    Layout = "~/Views/Shared/_MainPageLayout.cshtml";
    Content inst = ViewBag.ContentDb[0];
    List<User> usrs = ViewBag.UsersDb;
    Thread curThread = (Thread)TempData["CurrentThread"];
    bool ManagerStatus = (bool)TempData["Manager"];
}

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!--

Design by Free CSS Templates
http://csstemplatesforfree.com
Released for free under a Creative Commons Attribution 2.5 License

Title      : Embouteillage
Version    : 1.0
Released   : 200800204
Description: Three-column blog design with the third column allocated for <b>ads</b>. Features Web 2.0 design ideal for 1024x768 resolutions.

-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <style>
        .link_button {
            -webkit-border-radius: 2px;
            -moz-border-radius: 2px;
            border-radius: 2px;
            border: solid 1px #20538D;
            text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.4);
            -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 1px rgba(0, 0, 0, 0.2);
            -moz-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 1px rgba(0, 0, 0, 0.2);
            box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.4), 0 1px 1px rgba(0, 0, 0, 0.2);
            background: #4479BA;
            color: #FFF;
            padding: 4px 6px;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <!-- start header -->
    <div id="wrapper">
        <div id="header">
            <div id="logo" style="flex">
                <h1><a href="#">StudyCollab</a></h1>
                <p><a href="#">Learn from the best</a></p>
            </div>
        </div>
        <!-- end header -->
        <!-- star menu -->
        <div id="menu">
            <ul>
                <li class="current_page_item"><a href="@Url.Action("MainPage","MainPage",ViewData["CurrentUser"])">Home</a></li>
                <li class="current_page_item"><a href="@Url.Action("UploadFile","MainPage",Model)">Upload now</a></li>
                <li><a href="#">Recent followers upload</a></li>
                <li><a href="#">My profile</a></li>
                <li><a href="#">User Logged: @Model.UserName</a></li>
                @if (Model.rank == 0)
                {
                    <li><a href="#">Admin Page</a></li>
                }
                @if (!Model.UserName.Equals("None"))
                {
                    <li><a href="@Url.Action("logout", "MainPage")">log out</a></li>
                }
            </ul>
        </div>
        <!-- end menu -->
        <!-- start page -->
        <div id="page">
            <!-- start content -->
            <div id="content">
                @{TempData["urid"] = new User(Model); }
                <div>
                    <table class="table table-bordered" style="border-color:red">
                        <thead>FIles upladed:</thead>
                        <tbody>
                            <tr>
                                <td><h3>#</h3></td>
                                <td><h3>Uploader name</h3></td>
                                <td><h3>File name</h3></td>
                                <td><h3>Download</h3></td>
                                <td><h3>Delete</h3></td>
                            </tr>
                            @{
                                int j = 1;
                                foreach (Files file in (List<Files>)TempData["FilesTable"])
                                {
                                    if (file.Active == true)
                                    {
                                        <tr>
                                            <td>@(j++)</td>
                                            <td>@file.UploaderName</td>
                                            <td>@file.FileName</td>
                                            <td>
                                                @{TempData["UplNum"] = file.UploadNum;}
                                                <a href="@Url.Action("DownloadFile", "MainPage")">Download</a>
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                    <br /><br />
                    @if (curThread.Solved == true && curThread.Locked == true)
                    {
                        <i>[Solved] [Locked] || </i>
                    }
                    else if (curThread.Solved == true)
                    {
                        <i>[Solved] ||</i>
                    }
                    @inst.threadName <br />
                    <hr />
                    Content : <br />
                    @inst.threadContent <br />
                    <br/>
                    @if(inst.contentLink != null)
                    {
                        <i>Link: <a href="@inst.contentLink">@inst.contentLink</a></i>
                    }
                    <hr />
                    @{ 
                        FollowDal fdal = new FollowDal();
                        List<Int32> followsId = new List<Int32>();
                        try
                        {
                            followsId =
                                (from x in fdal.Follows
                                 where x.follower == Model.id
                                 select x.followOn).ToList<Int32>();
                        }
                        catch
                        {

                        }
                        TempData["flw"] = followsId;
                    }
                    @if (curThread.OwnerId == Model.id)
                    {
                        
                        int i = 0;
                        <form action="@Url.Action("chooseAnswer", "MainPage", curThread)" method="post">
                            @foreach (Comment cmt in ViewBag.CommentDb)
                            {
                                <i>
                                    @{i++;}
                                    @if (cmt.ans != true)
                                    {
                                        <input type="radio" id="@cmt.commentId" name="ansChoice" value="@cmt.commentId" /><i>Ans</i><br />
                                    }
                                    else
                                    {
                                        <input type="radio" id="@cmt.commentId" name="ansChoice" value="@cmt.commentId" checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked checked=checked /><i>Ans</i><br />
                                    }

                                    User Name: @usrs.Find(user => user.id == cmt.userId).UserName  Comment Rank: @cmt.rank @if (Model.rank == 0)
                                    {<i>(Admin Only) Comment ID: @cmt.commentId</i>} @if (ManagerStatus)
                                    {<i>(Manager) Comment ID: @cmt.commentId</i>}<br />
                                    @{
                                        string text = "Report recived from " + Model.UserName + "(ID " + Model.id + ")\n"
                                             + "Messege info:\n - comment id: " + cmt.commentId.ToString() + "\n"
                                             + " - Content: " + cmt.commentContent.ToString() + "\n"
                                             + " - Posted by(id): " + cmt.userId + "\n";

                                        Message ms = new Message()
                                        {
                                            date = DateTime.Now,
                                            senderName = "AlertSys",
                                            reciverName = "-1",
                                            mag = text,
                                            subject = "Alert"
                                        };
                                        TempData["Msg"] = ms;

                                        @cmt.commentContent <br />
                                        <br />
                                        <br />


                                        TempData["CurrentId" + cmt.commentId.ToString()] = Model.id;
                                        TempData["CurrentCmt" + cmt.commentId.ToString()] = new Comment(cmt);
                                        TempData["CurrentThread"] = new Thread(curThread);
                                        LikeDal ldal = new LikeDal();
                                        List<Like> lk = new List<Like>();
                                        try
                                        {
                                            lk =
                                            (from x in ldal.Likes
                                             where x.threadId == inst.threadId && x.commentId == cmt.commentId && x.usrId == Model.id
                                             select x).ToList<Like>();
                                        }
                                        catch
                                        {

                                        }

                                        if (!(cmt.userId == Model.id))
                                        {
                                            if (((List<Int32>)TempData["flw"]).Contains(cmt.userId))
                                            {
                                                <a href='@Url.Action("unFollow", "Communication", new { i = cmt.commentId })' class="link_button">Unfollow</a> <br />
                                                <br />
                                            }
                                            else
                                            {
                                                <a href='@Url.Action("follow", "Communication", new { i = cmt.commentId })' class="link_button">Follow</a> <br />
                                                <br />
                                            }

                                        }
                                        if (lk.Any())
                                        {
                                            <a href='@Url.Action("addLike", "Rate", new { i = cmt.commentId.ToString() })' class="link_button">Unlike</a> <br />
                                            <br />
                                        }
                                        else
                                        {
                                            <a href='@Url.Action("addLike", "Rate", new { i = cmt.commentId.ToString() })' class="link_button">Like</a> <br />
                                            <br />
                                            if ((int)TempData["canLike"] == -1)
                                            {
                                                <i>Can't rate - you cloud rate only after you earn 100 Likes or more</i><br />

                                            }
                                            <br />


                                        }
                                        <a href='@Url.Action("Report", "MainPage", new { cId = cmt.commentId })' class="link_button">Report</a> <br />
                                        <br />
//                                        <br />
                                        <a href='@Url.Action("Cw", "MainPage", new { cId = cmt.commentId })' class="link_button">" "</a> <br />
                                    }
                                    <br />
                                </i>
                                <hr />
                            }
                            <input type="submit" value="Choose Answer" /><br />
                        </form>
                        <a href='@Url.Action("clearSelection", "MainPage", curThread)'>
                            <input type='button' value='Clear Selection' />
                        </a>
                    }
                    else
                    {
                        int i = 0;
                        foreach (Comment cmt in ViewBag.CommentDb)
                        {

                        <i>
                            @{i++;}
                            @if (cmt.ans == true)
                            {
                                <img src="@Url.Content("~/Content/MainPage_Template/images/index.png")" alt="Correct" />
                            }
                            User Name: @usrs.Find(user => user.id == cmt.userId).UserName  Comment Rank: @cmt.rank @if (Model.rank == 0)
                            {<i>(Admin Only) Comment ID: @cmt.commentId</i>}@if (ManagerStatus)
                            {<i>(Manager) Comment ID: @cmt.commentId</i>}<br />
                            <br />
                            @{



                                string text = "Report recived from " + Model.UserName + "(ID " + Model.id + ")\n"
                                                          + "Messege info:\n - comment id: " + cmt.commentId.ToString() + "\n"
                                                          + " - Content: " + cmt.commentContent.ToString() + "\n"
                                                          + " - Posted by(id): " + cmt.userId + "\n";

                                Message ms = new Message()
                                {
                                    date = DateTime.Now,
                                    senderName = "AlertSys",
                                    reciverName = "-1",
                                    mag = text,
                                    subject = "Alert"
                                };

                                TempData["Msg"] = ms;

                                @cmt.commentContent <br />
                                <br />
                                <br />
                                TempData["CurrentId" + cmt.commentId.ToString()] = Model.id;
                                TempData["CurrentCmt" + cmt.commentId.ToString()] = new Comment(cmt);
                                TempData["CurrentThread"] = new Thread(curThread);
                                LikeDal ldal = new LikeDal();
                                List<Like> lk = new List<Like>();
                                try
                                {
                                    lk =
                                    (from x in ldal.Likes
                                     where x.threadId == inst.threadId && x.commentId == cmt.commentId && x.usrId == Model.id
                                     select x).ToList<Like>();
                                }
                                catch
                                {

                                }

                                if (lk.Any())
                                {
                                    <a href='@Url.Action("addLike", "Rate", new { i = cmt.commentId.ToString() })' class="link_button">Unlike</a> <br />
                                    //                                      <br />
                                }
                                else
                                {
                                    <a href='@Url.Action("addLike", "Rate", new { i = cmt.commentId.ToString() })' class="link_button">Like</a> <br />
                                    //                                      <br />
                                    if ((int)TempData["canLike"] == -1)
                                    {
                                        <i>Can't rate - you could rate only after you earn 100 Likes or more</i><br />

                                    }
                                    <br />

                                }
                                if (!(cmt.userId == Model.id))
                                {
                                    if (((List<Int32>)TempData["flw"]).Contains(cmt.userId))
                                    {
                                        <a href='@Url.Action("unFollow", "Communication", new { i = cmt.commentId })' class="link_button">Unfollow</a> <br />
                                        <br />
                                    }
                                    else
                                    {
                                        <a href='@Url.Action("follow", "Communication", new { i = cmt.commentId })' class="link_button">Follow</a> <br />
                                        <br />
                                    }

                                }


                                <a href='@Url.Action("Report", "MainPage", new { cId = cmt.commentId })' class="link_button">Report</a> <br />
                                //                                  <br />
                                <br />
                                <a href='@Url.Action("Cw", "MainPage", new { cId = cmt.commentId })' class="link_button">" "</a> <br />
                            }
                            <br />
                        </i>
                            <hr />
                        }
                    }
                </div>
                <div>
                    <div>
                        @{
                            String cntnt;
                            Int32 comm;
                            try
                            {
                                comm = Int32.Parse(TempData["commFlag"].ToString());

                            }
                            catch
                            {
                                comm = 0;
                            }

                            if (comm == 1)
                            {
                                cntnt = TempData["comm"].ToString();
                            }
                            else
                            {
                                cntnt = "Enter Content";
                            }

                            if (curThread.forUnion == false)
                            {
                                if (curThread.Locked != true)
                                {
                                    <i>
                                        <hr />
                                        New Comment
                                        <hr />
                                        <form action="@Url.Action("addComment", "MainPage", inst)" method="post">
                                            <textarea id="txt" rows="4" cols="50" name="commentContent" value="txt">@cntnt.ToString()</textarea>
                                            <input type="submit" value="Comment" />
                                        </form>
                                    </i>
                                }
                                else if (Model.rank == 0 || Model.rank == 1)
                                {
                                    <i>
                                        <hr />
                                        The thread is LOCKED!! only manager or admin can add comments.
                                        <hr />
                                        <form action="@Url.Action("addComment", "MainPage", inst)" method="post">
                                            <textarea id="txt" rows="4" cols="50" name="commentContent" value="txt">@cntnt.ToString()</textarea>
                                            <input type="submit" value="Comment" />
                                        </form>
                                    </i>
                                }
                                else
                                {
                                    <i>
                                        <hr />
                                        The thread is LOCKED!! only manager or admin can add comments.
                                        <hr />
                                    </i>

                                }
                            }
                            else
                            {

                                if (curThread.Locked != true && (Model.studentUnionRank == 1 || Model.studentUnionRank == 2))
                                {
                                    <i>
                                        <hr />
                                        New Comment
                                        <hr />
                                        <form action="@Url.Action("addComment", "MainPage", inst)" method="post">
                                            <textarea id="txt" rows="4" cols="50" name="commentContent" value="txt">@cntnt.ToString()</textarea>
                                            <input type="submit" value="Comment" />
                                        </form>
                                    </i>
                                }
                                else if (Model.rank == 0 || Model.rank == 1)
                                {
                                    <i>
                                        <hr />
                                        The thread is LOCKED!! only manager or admin can add comments.
                                        <hr />
                                        <form action="@Url.Action("addComment", "MainPage", inst)" method="post">
                                            <textarea id="txt" rows="4" cols="50" name="commentContent" value="txt">@cntnt.ToString()</textarea>
                                            <input type="submit" value="Comment" />
                                        </form>
                                    </i>
                                }
                                else
                                {
                                    <i>
                                        <hr />
                                        The thread is LOCKED!! only manager or admin can add comments.
                                        <hr />
                                    </i>

                                }
                            }
                        }


                        <div>
                            @if (Model.rank == 0 || ManagerStatus)
                            {
                                <i>
                                    <form action="@Url.Action("deleteComment", "MainPage", curThread)" method="post">
                                        Delete Comments: <br />
                                        Enter Comment Id to delete : <input type="text" name="cmtDelete" placeholder="Type Comment ID" />
                                        <input type="submit" value="Delete" />
                                    </form>
                                </i>
                            }
                        </div>




                        <!-- end page -->
                        <!-- start footer -->
                        <div id="footer">
                            <p class="legal">
                                &copy;2019 Sce-Group11. All Rights Reserved.
                                &nbsp;&nbsp;&bull;&nbsp;&nbsp;
                                Design by <a href="#">Team_11</a>
                                &nbsp;&nbsp;&bull;&nbsp;&nbsp;
                                Icons by <a href="#">real_photos</a>.
                            </p>
                            <!-- end footer -->
                            @{TempData["commFlag"] = 0;}
                        </div>

                    </div>

                </div>

            </div>

        </div>

    </div>

</body>
</html>
